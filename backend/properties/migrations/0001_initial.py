# Generated by Django 5.0.14 on 2025-05-24 08:11

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.TextField(blank=True, help_text='Address of the property (leave blank for reverse geocoding)')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property_type', models.CharField(blank=True, choices=[('home', 'Home'), ('apartment', 'Apartment')], max_length=50, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='accounts.stakeholderaccount')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApartmentProperty',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='properties.property')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('apartment_type', models.CharField(blank=True, choices=[('studio', 'Studio'), ('1_bedroom', '1 Bedroom'), ('2_bedroom', '2 Bedroom'), ('3_bedroom', '3 Bedroom'), ('4_bedroom', '4 Bedroom'), ('5_bedroom', '5 Bedroom'), ('penthouse', 'Penthouse'), ('loft', 'Loft'), ('duplex', 'Duplex'), ('triplex', 'Triplex'), ('hotel', 'Hotel'), ('hostel', 'Hostel'), ('other', 'Other')], max_length=50, null=True)),
                ('has_dishwasher', models.BooleanField(blank=True, null=True)),
                ('has_washer', models.BooleanField(blank=True, null=True)),
                ('has_dryer', models.BooleanField(blank=True, null=True)),
                ('has_oven', models.BooleanField(blank=True, null=True)),
                ('has_refrigerator', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Apartment Property',
                'verbose_name_plural': 'Apartment Properties',
                'ordering': ['-created_at'],
            },
            bases=('properties.property',),
        ),
        migrations.CreateModel(
            name='HomeProperty',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='properties.property')),
                ('list_type', models.CharField(choices=[('sale', 'Sale'), ('rent', 'Rent'), ('lease', 'Lease')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('has_c_of_o', models.BooleanField(default=False)),
                ('has_deed_of_assignment', models.BooleanField(default=False)),
                ('has_power_of_attorney', models.BooleanField(default=False)),
                ('has_survey_plan', models.BooleanField(default=False)),
                ('has_governors_consent', models.BooleanField(default=False)),
                ('total_half_bathrooms', models.IntegerField(blank=True, null=True)),
                ('total_full_bathrooms', models.IntegerField(blank=True, null=True)),
                ('laundry_level', models.CharField(blank=True, choices=[('ground', 'Ground')], max_length=50, null=True)),
                ('has_basement', models.BooleanField(blank=True, null=True)),
                ('has_fireplace', models.BooleanField(blank=True, null=True)),
                ('total_structure_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_interior_livable_area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('finished_area_above_ground', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('finished_area_below_ground', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_parking_spaces', models.IntegerField(blank=True, null=True)),
                ('parking_feature', models.CharField(blank=True, choices=[('attached', 'Attached'), ('detached', 'Detached'), ('carport', 'Carport'), ('street', 'Street')], max_length=50, null=True)),
                ('garage_spaces', models.IntegerField(blank=True, null=True)),
                ('parcel_number', models.CharField(blank=True, max_length=50, null=True)),
                ('home_type', models.CharField(blank=True, max_length=50, null=True)),
                ('architectural_style', models.CharField(blank=True, choices=[('modern', 'Modern'), ('traditional', 'Traditional'), ('contemporary', 'Contemporary'), ('colonial', 'Colonial'), ('craftsman', 'Craftsman'), ('ranch', 'Ranch'), ('victorian', 'Victorian'), ('farmhouse', 'Farmhouse'), ('cottage', 'Cottage'), ('mediterranean', 'Mediterranean'), ('tudor', 'Tudor'), ('art_deco', 'Art Deco'), ('mid_century_modern', 'Mid-Century Modern'), ('industrial', 'Industrial'), ('beach', 'Beach'), ('mountain', 'Mountain'), ('lake', 'Lake'), ('desert', 'Desert'), ('other', 'Other')], max_length=50, null=True)),
                ('property_condition', models.CharField(blank=True, choices=[('new', 'New'), ('like_new', 'Like New'), ('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('needs_work', 'Needs Work'), ('under_renovation', 'Under Renovation'), ('under_construction', 'Under Construction'), ('vacant', 'Vacant'), ('occupied', 'Occupied'), ('foreclosure', 'Foreclosure'), ('short_sale', 'Short Sale'), ('bank_owned', 'Bank Owned'), ('other', 'Other')], max_length=50, null=True)),
                ('year_built', models.IntegerField(blank=True, null=True)),
                ('has_fitness_center', models.BooleanField(blank=True, null=True)),
                ('has_game_room', models.BooleanField(blank=True, null=True)),
                ('has_bicycle_storage', models.BooleanField(blank=True, null=True)),
                ('has_swimming_pool', models.BooleanField(blank=True, null=True)),
                ('allow_small_dog', models.BooleanField(blank=True, null=True)),
                ('allow_large_dog', models.BooleanField(blank=True, null=True)),
                ('allow_cat', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Home Property',
                'verbose_name_plural': 'Home Properties',
                'ordering': ['-created_at'],
            },
            bases=('properties.property',),
        ),
        migrations.CreateModel(
            name='BannedProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('banned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_properties', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_properties', to='properties.property')),
            ],
            options={
                'verbose_name': 'Banned Property',
                'verbose_name_plural': 'Banned Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookmarkedProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_properties', to='properties.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bookmarked Property',
                'verbose_name_plural': 'Bookmarked Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/')),
                ('is_primary', models.BooleanField(default=False)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'verbose_name': 'Property Image',
                'verbose_name_plural': 'Property Images',
                'ordering': ['-property__created_at'],
            },
        ),
        migrations.CreateModel(
            name='VerifiedProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verified', to='properties.property')),
                ('verified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verified_properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Verified Property',
                'verbose_name_plural': 'Verified Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HomePropertyBedroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('ground', 'Ground')], max_length=50, null=True)),
                ('dimention_width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dimention_length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('home_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bedrooms', to='properties.homeproperty')),
            ],
            options={
                'verbose_name': 'Home Property Bedroom',
                'verbose_name_plural': 'Home Property Bedrooms',
                'ordering': ['-home_property__created_at'],
            },
        ),
    ]
